

===============

11/2 
인스타 크롤링
네이버뉴스 기사제목 크롤링
데이터 정제 - 서울시 반려등록현황 데이터

서울시 반려등록현황 데이터조작 (작업중)
['강동구', '강서구', '구로구', '금천구', '노원구', '동대문구', '서대문구', '성북구', '송파구', '용산구', '종로구', '중구_', '강남구', '관악구', '광진구', '도봉구', '동작구', '성동구', '영등포구', '중랑구', '송파구견종']
(은평구, 서초구, 양천구 자료 없음)
하고는 있는데 코드가 너무 더럽다. 비정형 데이터란 원래 이런 건가... 선생님께 여쭤보니 원래 그런 거라고 말씀하신다. 오히려 공공데이터이기에 정제가 되어있는 것이라고...하
1. 어떻게 하나로 묶을까 고민했는데, 딕셔너리 키에 자치구명을 적고 value 값에 dt를 넣는다.
2. data 전체를 열어보고 우리가 필요한 데이터를 우선 생각해본다. 구, 동, 등록수, 소유자수, 종, 품종, 기준일자, 소유자당반려동물수
3. 딕셔너리에서 자치구별로 하나씩 value를 df1, df2, ... 로 저장하여 간편하게 사용할 수 있도록 하고, 데이터를 확인하면서 정제할 예정이다. (현재)
<정제 기준>
1) 기준일자는 모두 datetime 으로 바꾸어준다.
2) 강아지는 0, 고양이는 1, 그외는 2로 변환 (X 계획 삭제. 반려동물이라고 종합적으로 나온 데이터라 종을 구분하기 어렵다. 종, 품종 열 삭제)
3) 법정동까지 필요할까 싶지만 일단 둔다.
<강동구 데이터 처리log>
1) ['시군구', '대행업체', '기타(이벤트등)', 'RFID내장형', 'RFID외장형', '인식표'] 열 삭제
2) '시군구'+'대행업체'=등록동물수
3) 동물소유자당의 값은 등록동물수/소유자수 이므로, 소유자수를 유추해볼 수 있지만 소수점 아래자리까지 확인이 어려워 예측값이 틀릴 수 있으므로 열을 생성하지 않는다.



=============
11/3

데이터 정제 - 서울시 동물등록현황 데이터

참고한 노트, 사용한 코드들
['강동구', '강서구', '구로구', '금천구', '노원구', '동대문구', '서대문구', '성북구', '송파구', '용산구', '종로구', '중구_', '강남구', '강북구', '관악구', '광진구', '도봉구', '동작구', '마포구', '성동구', '송파구견종', '영등포구', '중랑구']

df1 = data['강동구'].copy()
df1

col_li3 = df3.columns.tolist()
col_li3

# 등록동물수 집계
df1['등록동물수'] = df1['시군구'] + df1['대행업체']
df2['소유자수'] = df2['개등록자수'] + df2['고양이등록자수']
df2['소유자당반려동물수'] = round(df13['동물 등록수'] / df13['동물 소유자수'], 2)

# 결측치 제외하고 등록동물수 구해서 열 만들기
for i in range(df2.shape[0]):
    if df2.isna()['고양이등록수'][i]:
        df2['고양이등록수'][i] = 0
    else:
        df2['고양이등록수'][i] = df2['고양이등록수'][i]
    if df2.isna()['고양이등록자수'][i]:
        df2['고양이등록자수'][i] = 0
    else:
        df2['고양이등록자수'][i] = df2['고양이등록자수'][i]

# datetime 으로 타입 변환
for i in range(9):
    year = datetime.strptime(df1['집계기준'][i][:4], '%Y')
    df1['기준일자'] = year
    
df2['기준일자'] = df2['기준일자'].astype('datetime64')
df3['기준일자'] = datetime.strptime('2022-04-30', '%Y-%m-%d')



# df 에 맞추어 데이터 정제
df2 = pd.DataFrame(columns = ['자치구', '법정동', '등록동물수', '소유자수', '기준일자', '소유자당반려동물수'],
                  data = {'자치구':df2['자치구'],
                   '법정동':df2['법정동'],
                   '등록동물수':df2['등록동물수'],
                   '소유자수': df2['소유자수'],
                   '기준일자':df2['기준일자'],
                   '소유자당반려동물수':df2['소유자당반려동물수']})



서울관광재단_식당운영정보 (작업중)
columns
['index', '식당(ID)', '식당명', '지역명', '주차가능여부', '와이파이제공여부', '놀이방유무',
       '반려동물입장가능여부', '다국어메뉴판제공여부', '화장실정보내용', '휴무일정보내용', '영업시간내용', '택배판매유무',
       '배리어프리유무', '배달서비스유무', '예약방식명', '온라인예약정보내용', '홈페이지(URL)', '인근랜드마크명',
       '인근랜드마크위도', '인근랜드마크경도', '인근랜드마크와거리', '키오스크유무', '모바일페이먼트유무', '스마트오더유무',
       '입식좌석수', '좌식좌석수', '대표메뉴명']

분석
1. 필요데이터는 ['식당명', '지역명', '주차가능여부', '와이파이제공여부', '놀이방유무', '반려동물입장가능여부', '화장실정보내용', '인근랜드마크명', '인근랜드마크위도', '인근랜드마크경도']
2. 주차, 와이파이, 놀이방, 화장실은 Y면 1, N이면 0. 그리고 합산해서 점수로 넣기.
for col in ['주차가능여부', '와이파이제공여부', '놀이방유무', '화장실정보내용']:
> df['편리성(주차/와이파이/놀이방/화장실)'] = 0
> for col in ['주차가능여부', '와이파이제공여부', '놀이방유무', '화장실정보내용']:
    df.loc[df[col]=='Y', col] = 1
    df.loc[df[col]=='N', col] = 0
    df['편리성(주차/와이파이/놀이방/화장실)'] = df['편리성(주차/와이파이/놀이방/화장실)'] + df[col]
    df.drop(col, axis=1, inplace=True)

3. 지역명 시와 구 분할
> df['지역명'] = df['지역명'].str.split()
> df['시'] = [df['지역명'][i][0] for i in range(np.shape(df)[0])]
> df['구'] = [df['지역명'][i][1] for i in range(np.shape(df)[0])]
> df = df.drop('지역명',axis=1)

4. 결측치 제외
> df = df.dropna(axis=0, inplace=False)
> df = df.reset_index(drop=True)

5. 편리성에 따라 줄 세우기
> df_sorted = df.sort_values(by='편리성(주차/와이파이/놀이방/화장실)', ascending=False)
> df_sorted[df_sorted['편리성(주차/와이파이/놀이방/화장실)'] >= 2]


=============

11/4
1차 발표 대본 작성
1차 발표 회의 및 PPT, 대본 수정
1차 발표
데이터 정제 - 서울시 동물병원 인허가정보

서울시 동물병원 인허가정보
['개방자치단체코드', '관리번호', '인허가일자', '인허가취소일자', '영업상태코드', '영업상태명', '상세영업상태코드',
       '상세영업상태명', '폐업일자', '휴업시작일자', '휴업종료일자', '재개업일자', '전화번호', '소재지면적',
       '소재지우편번호', '지번주소', '도로명주소', '도로명우편번호', '사업장명', '최종수정일자', '데이터갱신구분',
       '데이터갱신일자', '업태구분명', '좌표정보(X)', '좌표정보(Y)', '축산업무구분명', '축산물가공업구분명',
       '축산일련번호', '권리주체일련번호', '총인원']

1. 필요 데이터 : ['개방자치단체코드', '인허가일자', '데이터갱신일자', '좌표정보(X), '좌표정보(Y)']
2. 

좌표가 이상해서 뭐 함수를 긁어와서 쓰려 하니 바다를 잡는다......
오늘 대체 뭐한 거냐 ㅠㅠㅠㅠㅠㅠ 하 집에 갈래!!!!!!!!!!!!!

==========
11/7
좌표를 대체 어떻게 만져야 할까... 막막함을 가지고 구글링을 하던 중
geocode 를 찾았다.
오, 이건 뭐지? 하면서 구글링을 진행하는데
내 검색기록에 "geocode by awesome table" 이라는 게 뜬다.
그렇다. 기억이 났다.
수업시간에 했던 내용이다.
얼른 구글 스프레드시트를 열어 좌표변환을 실행했다.
OMG...

정확한 경도/위도가 나오지 않았는데, 인근랜드마크와거리를 보니 직선거리(m)로 따져 나온다. 우리가 공원에서 가까운 순으로 따지면 좀 써볼만하지 않을까..?


서울시 주요 공원현황
info() 확인 - 필요한 데이터 : 공원명, 면적, 주요시설, 좌표, 이용시참고사항, 지역


서울시 등록동물수, 상권분석내용 다 합해서 정리함.


==========
11/8
서울시 등록동물수, 상권분석내용 시각화


경기도 도시공원 데이터 정제
(장자호수공원을 모델로 하여)
컬럼 : ['공원명', '공원구분', '소재지도로명주소', '소재지지번주소', '위도', '경도', '공원면적(㎡)',
       '공원보유시설(운동시설)', '공원보유시설(유희시설)', '공원보유시설(편익시설)', '공원보유시설(교양시설)',
       '공원보유시설(기타시설)', '지정고시일', '관리기관명', '전화번호', '데이터기준일자']

필요데이터 : ['공원명', '공원구분', '공원면적(㎡)', '관리기관명']

컬럼 : ['소재지도로명주소', '소재지지번주소', '위도', '경도',
       '공원보유시설(운동시설)', '공원보유시설(유희시설)', '공원보유시설(편익시설)', '공원보유시설(교양시설)',
       '공원보유시설(기타시설)', '지정고시일', '전화번호', '데이터기준일자']

> df.info()
>>> <class 'pandas.core.frame.DataFrame'>
RangeIndex: 4442 entries, 0 to 4441
Data columns (total 4 columns):
 #   Column   Non-Null Count  Dtype  
---  ------   --------------  -----  
 0   공원명      4442 non-null   object 
 1   공원구분     4442 non-null   object 
 2   공원면적(㎡)  4442 non-null   float64
 3   관리기관명    3569 non-null   object 
dtypes: float64(1), object(3)
memory usage: 138.9+ KB

> cond1 = df['관리기관명'].notna()
cond2 = df['공원면적(㎡)'] > 45000
df[cond1 & cond2]

경기도는 워낙 넓고 도시공원이 많아서, 문제가 있는 지역부터 보는 게 효율적. (용인시 정보가 빠져있고, 그외에도 살펴보아야 할 정도. https://www.yongin.go.kr/home/www/www12/www12_04/www12_04_02.jsp)
민원발생수 확인 가능? 노노..
대신 <한눈에 보는 민원 빅데이터>에서 반려견 관련 민원 자료 확보. 2017년 기준 3년 간 민원발생현황 데이터 확인.


칼럼 맞춰서 서울시 데이터와 합치기
> df['X좌표'] = None
df['Y좌표'] = None
> df.columns = ['공원명', '면적', '지역/관리기관명', 'X좌표', 'Y좌표']

서울시데이터
> df = df[df['면적'] > 45000]
> df.reset_index(drop=True, inplace=True)
> df.columns  = ['공원명', '면적', '지역/관리기관명', 'X좌표', 'Y좌표']
> df.to_csv('./data/서울시공원현황_전처리완료.csv', encoding='cp949', index=False)

> park_g = pd.read_csv('./data/경기도공원현황_전처리완료.csv', encoding='cp949')
park_s = pd.read_csv('./data/서울시공원현황_전처리완료.csv', encoding='cp949')
> pd.concat([park_s, park_g], axis=0)


동물병원, 동물약국 법정동 추출
> p = re.compile(r"[가-힣]{1,4}동", re.MULTILINE)
df['법정동'] = 0

> for i in range(np.shape(df)[0]):
    df['법정동'][i] = p.findall(df['도로명주소'][i])
    # '동'으로 끝나는 문자열이 여러개인 경우
    if len(df['법정동'][i]) > 1 :
        # print(i, df['도로명주소'][i], df['법정동'][i])
        # 직접 확인하여 처리
        if i in [616, 664, 1269, 1594, 1734, 1827, 1851, 1871, 1876, 1880, 1888, 1899]:
            df['법정동'][i] = df['법정동'][i][-2]
        else:
            df['법정동'][i] = df['법정동'][i][-1]
    else:
        df['법정동'][i] = ''.join(df['법정동'][i])

> df = df.drop(['도로명주소'], axis=1)

여기에 노가다가 많이 들어갔다. '동'으로 끝나는 끝나는 문자열을 정규식으로 추출하였으나.. ~~동물병원 이든 상가동지하센터 등등 '동'으로 끝나는 문자열이 많았다. 그래서 결과가 2개 이상인 경우만 따로 출력하여 인덱스를 확인하고 따로 넣어주어야 했다. 비효율적이다. 데이터가 더 많아진다면? 노답. 내 시력과 맞바꿀 수 없다. 다음에는 어떻게 해야 할까? 법정동만 추출하는 방법에는 또 뭐가 있을까?


법정동별 동물병원개수, 동물약국개수 추출
> grouped = df.groupby(['자치구', '법정동'], as_index=False)[['사업장명']].apply('count')

> medicine_count = pd.DataFrame(columns=['자치구', '법정동', '동물병원개수'],
                             data= {'자치구':grouped['자치구'],
                                    '법정동': grouped['법정동'],                              
                                   '동물약국개수':grouped['사업장명']})


==================

11/9
인스타 게시글내용 top20 바그래프, 워드클라우드

네이버 기사제목 top20 바그래프, 워드클라우드


내발산동 - 발산동
궁동 - 수궁동
용두동 - 용신동

법정동별 등록동물수, 소유자수 클러스터링
자치구별 반려동물입장가능식당수, 동물병원수, 동물약국수 클러스터링
스케일링 StandardScaler
차원 축소 PCA
실루엣 분석, 평가 -> 적절한 군집수 정함

예상결과, 해야할일 정리


===============
11/10

서울시 동물등록현황 군집화 결과, ( 스케일링, PCA, 실루엣분석 결과 5개 군집) 강서구 화곡동, 관악구 봉천동, 관악구 신림동, 노원구 상계동이 등록동물수와 소유자수가 높은 군집에 속해있음을 확인하였다.
서울도시계획포털(https://urban.seoul.go.kr/) 에서 '개별비오톱 평가도', '동경계', '구경계' 를 범례로 설정하여 확인한 결과, 관악구 신림동 내에 3등급으로 평가된 부분이 다수 발견됨. 또한 3등급 평가 지역 인근에 아파트단지와 산지가 있고, 반려견놀이터는 없음을 발견함. 따라서 이 지역 부근에 있는 해바라기 어린이공원이나 관악도시농업공원 혹은 호암산 입구(호압사 근처)에 반려견놀이터 설치를 추천.

이걸 데이터를 가지고 확인하면 좋은데, 지도 데이터를 얻기 어려웠다. 그래서 일단 눈으로 확인하면서 진행함.

관악구 법정동별 동물등록수와 소유자수 바그래프 시각화
서울시 자치구별 동물등록수와 소유자수 바그래프 시각화


그 다음이 어떻게 되어야 하는지... 길을 잃는다.
어떤 데이터가 있는지 파악, 새로운 데이터 찾기..
어떤 게 주요 피처가 되는지 파악하기 어려움.
최종목표가 되는 열을 우선 설정하고 데이터 수집. 필요데이터 먼저 설정.

여러 파일을 만들다 보니 헷갈림. 뭐가 뭔지. 네이밍을 잘해야 하나. 아니면 파일 수를 줄여야 하나.