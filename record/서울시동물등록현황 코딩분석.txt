1. import 모음
import pandas as pd
import os
from datetime import datetime
from datetime import date




2. 데이터 읽고 객체로 저장

> # path 저장, file_names 리스트 만들기
path = './data/서울시/동물등록현황/'

file_names = []
for (root, directories, files) in os.walk(path):
    print(root)
    print()
    print(directories)
    print()
    print(files)
    print()
    for i in files:
        file_names.append(i)

>>> ./data/서울시/동물등록현황/

[]

['서울특별시 강동구_동물등록현황_20210801.csv', '서울특별시 강서구_동별 반려동물 등록 현황_20210222.csv', '서울특별시 구로구_법정동별 동물등록 현황_20220430.csv', '서울특별시 금천구_반려동물 등록 현황 및 등록 인구 수_20220226.csv', '서울특별시 노원구_반려동물현황_20220828.csv', '서울특별시 동대문구_동별반려동물 현황_20220718.csv', '서울특별시 서대문구_반려동물 등록 현황_20211231.csv', '서울특별시 성북구_동별 반려동물 등록현황_20210831.csv', '서울특별시 송파구_동별반려동물등록현황_20210916.csv', '서울특별시 용산구_반려동물등록현황_20220512.csv', '서울특별시 종로구_반려동물등록현황_20220407.csv', '서울특별시 중구_반려동물 등록현황_20220223.csv', '서울특별시_강남구_반려동물등록현황_20220825.csv', '서울특별시_강북구_동물관련 현황_20200917.csv', '서울특별시_관악구_반려동물 등록현황_20210222.csv', '서울특별시_광진구_반려동물 등록현황_20220207.csv', '서울특별시_도봉구_반려동물등록현황_20191016..csv', '서울특별시_동작구_반려동물등록현황_20220818.csv', '서울특별시_마포구_동물등록현황_20201117.csv', '서울특별시_성동구_반려동물현황_20220818.csv', '서울특별시_송파구견종_법정동별반려동물등록현황_20210916.csv', '서울특별시_영등포구_반려동물등록현황_20220511.csv', '서울특별시_중랑구_반려동물등록현황_20211013.csv']

> # 인코딩 오류를 피하기 위해 file_names 분리
file_names1 = file_names[:20]
file_names2 = file_names[20:]

# 구별로 데이터를 하나로 모아 우선 저장하기 위해
# key 는 '자치구', value 는 데이터프레임인 딕셔너리 만들기
data = {}
for i in range(len(file_names1)):
    file_name = file_names1[i]
    direction = path + file_name
    # 자치구명 추출, 열 추가
    if '_' in file_name[6:10]:
        temp = str(file_name[6:9])
    else:
        temp = str(file_name[6:10])
    data[temp] = pd.read_csv(direction, encoding='cp949')
    data[temp]['자치구'] = temp

# 인코딩 오류로 위의 for 문 밖에서 실행
data['송파구견종'] = pd.read_csv('./data/서울시/동물등록현황/서울특별시_송파구견종_법정동별반려동물등록현황_20210916.csv')
data['영등포구'] = pd.read_csv('./data/서울시/동물등록현황/서울특별시_영등포구_반려동물등록현황_20220511.csv', encoding='cp949')
data['영등포구']['자치구'] = '영등포구'
data['중랑구'] = pd.read_csv('./data/서울시/동물등록현황/서울특별시_중랑구_반려동물등록현황_20211013.csv', encoding='cp949')
data['중랑구']['자치구'] = '중랑구'




3. 데이터 확인
 

> data.keys()
>>> dict_keys(['강동구', '강서구', '구로구', '금천구', '노원구', '동대문구', '서대문구', '성북구', '송파구', '용산구', '종로구', '중구_', '강남구', '강북구', '관악구', '광진구', '도봉구', '동작구', '마포구', '성동구', '송파구견종', '영등포구', '중랑구'])

> len(file_names)
>>> 23




4. 데이터 정제 (노동의 시작...)

> df1 = data['강동구'].copy()
> # 등록동물수 집계
df1['등록동물수'] = df1['시군구'] + df1['대행업체']
df1['소유자수'] = round(df1['등록동물수'] / df1['동물소유자당'])

# datetime 으로 타입 변환
for i in range(9):
    year = datetime.strptime(df1['집계기준'][i][:4], '%Y')
    df1['기준일자'] = year

> # df 에 맞추어 데이터 정제
df1 = pd.DataFrame(columns = ['자치구', '법정동', '등록동물수', '소유자수', '기준일자', '소유자당반려동물수'],
                  data = {'자치구':df1['자치구'],
                   '법정동':df1['읍면동'],
                   '등록동물수':df1['등록동물수'],
                   '소유자수':df1['소유자수'],
                   '기준일자':df1['기준일자'],
                   '소유자당반려동물수':df1['동물소유자당']})

> df1.info()
>>> <class 'pandas.core.frame.DataFrame'>
RangeIndex: 9 entries, 0 to 8
Data columns (total 6 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   자치구        9 non-null      object        
 1   법정동        9 non-null      object        
 2   등록동물수      9 non-null      int64         
 3   소유자수       9 non-null      float64       
 4   기준일자       9 non-null      datetime64[ns]
 5   소유자당반려동물수  9 non-null      float64       
dtypes: datetime64[ns](1), float64(2), int64(1), object(2)
memory usage: 560.0+ bytes




5. 최종 데이터프레임


> df = pd.DataFrame(columns = ['자치구', '법정동', '등록동물수', '소유자수', '기준일자', '소유자당반려동물수'])

> df = pd.concat([df, df1, df2, df3, df4, df5, df6, df7, df8, df9, df10, df11, df12, df13, df14, df15, df16, df17, df18, df19, df20, df21, df22], axis=0, ignore_index=True)

> df['기준일자'] = df['기준일자'].astype('datetime64')
df['등록동물수'] = df['등록동물수'].astype('int64')
df['소유자수'] = df['소유자수'].astype('float64')
df['소유자당반려동물수'] = df['소유자당반려동물수'].astype('float64')

> df.info()
>>> <class 'pandas.core.frame.DataFrame'>
RangeIndex: 406 entries, 0 to 405
Data columns (total 6 columns):
 #   Column     Non-Null Count  Dtype         
---  ------     --------------  -----         
 0   자치구        406 non-null    object        
 1   법정동        403 non-null    object        
 2   등록동물수      406 non-null    int64         
 3   소유자수       355 non-null    float64       
 4   기준일자       406 non-null    datetime64[ns]
 5   소유자당반려동물수  355 non-null    float64       
dtypes: datetime64[ns](1), float64(2), int64(1), object(2)
memory usage: 19.2+ KB





6. csv 파일로 저장


> df.to_csv('서울시동물등록현황.csv', index=False, encoding='cp949')